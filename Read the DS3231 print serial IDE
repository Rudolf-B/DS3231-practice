#include <Wire.h>

void setup() {
  Wire.begin();
  Serial.begin(115200);
}

void loop() {
  displayDateTimeTemperatureOnSerial();
  delay(1000);
}

void displayDateTimeTemperatureOnSerial() {
  // Read the date and time
  Wire.beginTransmission(0x68);
  Wire.write(0);  // Start reading from address 0 (seconds)
  Wire.endTransmission();
  Wire.requestFrom(0x68, 7);  // Request seconds, minutes, hours, day, date, month, year

  if (Wire.available()) {
    byte seconds = bcdToDec(Wire.read() & 0x7F);  // Mask the high bit of seconds
    byte minutes = bcdToDec(Wire.read() & 0x7F);
    byte hourRegister = Wire.read();
    byte hours;
    bool isPM = false;

    bool is12HourMode = hourRegister & 0x40;  // Check if DS3231 is in 12-hour mode
    if (is12HourMode) {
      isPM = hourRegister & 0x20;  // Check if it's PM
      hours = bcdToDec(hourRegister & 0x1F);  // Mask the high three bits for 12-hour mode
    } else {
      hours = bcdToDec(hourRegister & 0x3F);  // 24-hour mode, mask the high two bits
    }

    byte day = bcdToDec(Wire.read());
    byte date = bcdToDec(Wire.read());
    byte month = bcdToDec(Wire.read());
    int year = 2000 + bcdToDec(Wire.read());

    // Read the temperature
    Wire.beginTransmission(0x68);
    Wire.write(0x11);  // Start reading from temperature register
    Wire.endTransmission();
    Wire.requestFrom(0x68, 2);
    byte tempMSB = Wire.read();
    byte tempLSB = Wire.read();
    float temperatureC = (tempMSB << 8 | tempLSB) / 256.0;
    float temperatureF = (temperatureC * 9.0 / 5.0) + 32.0;  // Convert to Fahrenheit

 

    // Print to Serial Monitor
    Serial.print("Date: ");
    Serial.print(year);
    Serial.print("-");
    Serial.print(month);
    Serial.print("-");
    Serial.print(date);
    Serial.print(" ");
    Serial.println(dayOfWeekToStr(day));

    Serial.print("Time: ");
    Serial.print(hours);
    Serial.print(":");
    if (minutes < 10) Serial.print("0");
    Serial.print(minutes);
    Serial.print(":");
    if (seconds < 10) Serial.print("0");
    Serial.print(seconds);
    Serial.print(is12HourMode ? (isPM ? " PM" : " AM") : ""); // Empty string if in 24-hour mode
    Serial.println();

    Serial.print("Temp: ");
    Serial.print(temperatureC);
    Serial.print(" C / ");
    Serial.print(temperatureF);
    Serial.println(" F");
    Serial.println();
    Serial.println();
  }
}

byte bcdToDec(byte val) {
  return ((val / 16 * 10) + (val % 16));
}

String dayOfWeekToStr(byte dayOfWeek) {
  switch (dayOfWeek) {
    case 1: return "Monday   ";
    case 2: return "Tuesday  ";
    case 3: return "Wednesday";
    case 4: return "Thursday ";
    case 5: return "Friday   ";
    case 6: return "Saturday ";
    case 7: return "Sunday   ";
    default: return "Err     ";
  }
}
